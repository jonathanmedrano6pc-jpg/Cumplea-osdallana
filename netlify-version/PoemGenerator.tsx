import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Heart, Sparkles, RefreshCw } from 'lucide-react';

const poemThemes = [
  { id: 'birthday', label: 'Cumplea√±os', emoji: 'üéÇ' },
  { id: 'friendship', label: 'Amistad', emoji: 'üíñ' },
  { id: 'stitch', label: 'Stitch & Ohana', emoji: 'üíô' },
  { id: 'memories', label: 'Recuerdos', emoji: '‚ú®' },
  { id: 'dreams', label: 'Sue√±os', emoji: 'üåü' },
  { id: 'adventure', label: 'Aventuras', emoji: 'üåà' }
];

// Static poems for Netlify version
const staticPoems = {
  birthday: `Querida Dallana, en tu d√≠a especial,
las estrellas brillan con luz celestial,
tu sonrisa ilumina cada rinc√≥n,
llenando de alegr√≠a nuestro coraz√≥n.

Como Stitch encontr√≥ su familia,
t√∫ llegaste a mi vida con maravilla,
trayendo colores donde antes hab√≠a gris,
siendo mi tesoro, mi mayor feliz.

Cada a√±o que cumples es una celebraci√≥n,
de tu bondad, tu gracia y tu compasi√≥n,
que este nuevo a√±o te traiga mil aventuras,
y que tus sue√±os se vuelvan m√°s seguros.

¬°Feliz cumplea√±os, mi querida Dallana!`,

  friendship: `En el jard√≠n de la vida, Dallana,
t√∫ eres la flor m√°s temprana,
con p√©talos de risa y hojas de ternura,
eres mi amistad m√°s pura.

Como dos almas que se encontraron,
nuestros caminos se entrelazaron,
creando memorias doradas,
en aventuras compartidas.

Tu coraz√≥n noble y sincero,
es mi refugio verdadero,
donde encuentro paz y calma,
en la m√∫sica de tu alma.

Gracias por ser mi compa√±√≠a,
mi luz en cada d√≠a.`,

  stitch: `"Ohana significa familia", dice Stitch,
y t√∫, Dallana, eres mi match,
una familia del coraz√≥n elegida,
que nunca se abandona ni se olvida.

Como Lilo y su azul amigo,
tenemos un lazo de abrigo,
donde el amor trasciende la distancia,
y florece en cada circunstancia.

Eres mi peque√±o milagro azul,
mi Stitch en forma de √°ngel, es veraz,
con tu travesura y tu dulzura,
haces mi vida una aventura.

Ohana para siempre seremos,
y juntos creceremos.`,

  memories: `En las p√°ginas del tiempo, Dallana,
est√°n escritas memorias de porcelana,
cada momento contigo es un tesoro,
que guardo en mi coraz√≥n como oro.

Recuerdo tu primera sonrisa,
como una suave brisa,
que lleg√≥ a cambiar mi mundo,
con amor tan profundo.

Las risas compartidas en tardes de sol,
los secretos susurrados en un rinc√≥n,
cada abrazo, cada conversaci√≥n,
son diamantes en mi colecci√≥n.

Estos recuerdos son mi fortuna,
mi luz bajo cualquier luna.`,

  dreams: `Dallana, peque√±a so√±adora,
el futuro te espera cada hora,
con brazos abiertos y esperanza,
para cumplir cada a√±oranza.

Tus sue√±os son mariposas de colores,
volando entre risas y amores,
cada uno m√°s hermoso que el anterior,
pintando tu destino con primor.

No hay meta que no puedas alcanzar,
ni estrella que no puedas tocar,
porque tienes un coraz√≥n valiente,
y un alma verdaderamente ardiente.

Vuela alto, mi dulce ni√±a,
que el mundo es tu monta√±a.`,

  adventure: `Dallana, compa√±era de aventuras,
juntos exploramos alturas,
desde monta√±as de almohadas,
hasta islas imaginadas.

Cada d√≠a contigo es un viaje,
lleno de magia y coraje,
donde descubrimos nuevos mundos,
en momentos tan profundos.

Eres mi co-piloto valiente,
en esta vida emocionante,
donde cada risa es un mapa,
y cada abrazo, una etapa.

Sigamos explorando juntos,
creando recuerdos √∫nicos.`
};

export default function PoemGenerator() {
  const [selectedTheme, setSelectedTheme] = useState<string>('birthday');
  const [currentPoem, setCurrentPoem] = useState<string>('');
  const [isLoading, setIsLoading] = useState(false);

  const handleGeneratePoem = () => {
    setIsLoading(true);
    
    // Simulate loading
    setTimeout(() => {
      const poem = staticPoems[selectedTheme as keyof typeof staticPoems] || staticPoems.birthday;
      setCurrentPoem(poem);
      setIsLoading(false);
    }, 1500);
  };

  return (
    <div className="max-w-4xl mx-auto">
      <div className="text-center mb-8">
        <h2 className="font-pacifico text-5xl text-stitch-purple mb-4 drop-shadow-sm">
          Generador de Poemas
        </h2>
        <p className="text-lg text-gray-600">
          Elige un tema y crea un poema especial para Dallana
        </p>
      </div>

      {/* Theme Selection */}
      <Card className="mb-8 shadow-lg border-2 border-stitch-pink/20">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-stitch-purple">
            <Sparkles className="w-5 h-5" />
            Elige un Tema
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
            {poemThemes.map((theme) => (
              <Badge
                key={theme.id}
                variant={selectedTheme === theme.id ? "default" : "outline"}
                className={`p-3 cursor-pointer transition-all hover:scale-105 text-center ${
                  selectedTheme === theme.id 
                    ? 'bg-stitch-purple text-white shadow-lg' 
                    : 'hover:bg-stitch-pink/10 border-stitch-pink'
                }`}
                onClick={() => setSelectedTheme(theme.id)}
              >
                <span className="text-lg mr-2">{theme.emoji}</span>
                {theme.label}
              </Badge>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Generate Button */}
      <div className="text-center mb-8">
        <Button
          onClick={handleGeneratePoem}
          disabled={isLoading}
          className="bg-gradient-to-r from-stitch-blue to-stitch-purple hover:from-stitch-purple hover:to-stitch-pink text-white px-8 py-3 rounded-full text-lg font-semibold shadow-lg hover:shadow-xl transition-all transform hover:scale-105 disabled:opacity-50 disabled:transform-none"
        >
          {isLoading ? (
            <>
              <RefreshCw className="w-5 h-5 mr-2 animate-spin" />
              Creando Magia...
            </>
          ) : (
            <>
              <Heart className="w-5 h-5 mr-2" />
              Generar Poema
            </>
          )}
        </Button>
      </div>

      {/* Generated Poem Display */}
      {currentPoem && (
        <Card className="shadow-xl border-2 border-stitch-pink/30 bg-gradient-to-br from-white to-pink-50">
          <CardHeader className="text-center">
            <CardTitle className="flex items-center justify-center gap-2 text-stitch-purple">
              <Sparkles className="w-6 h-6" />
              Tu Poema Especial
              <Sparkles className="w-6 h-6" />
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="bg-white p-8 rounded-lg shadow-inner border border-stitch-pink/20">
              <div className="text-center text-gray-800 text-lg leading-relaxed whitespace-pre-line font-serif">
                {currentPoem}
              </div>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}